environment:
  TWINE_PASSWORD:
    secure: fqy2DKVE2zM+97vNPB8xgw3ae3SDPkL/T8RvC6s4ncY=
  matrix:
    - BUILD_TYPE: "MSVC_64_Debug"
      COMPILER: MSVC15
      PLATFORM: "x64"
    - BUILD_TYPE: "MSVC_64_Python37"
      COMPILER: MSVC15
      PLATFORM: "x64"
    #- BUILD_TYPE: "MSVC_64_Python36"
    #  COMPILER: MSVC15
    #  PLATFORM: "x64"
    #- BUILD_TYPE: "MinGW_64_Debug"
    #- BUILD_TYPE: "MinGW_64_Python37"
    #- BUILD_TYPE: "MinGW_64_Python36"
    #- BUILD_TYPE: "MinGW_64_Python27"
  global:
    PLATFORMTOOLSET: "v140"

install:
- if [%BUILD_TYPE%]==[MSVC_64_Debug] set PATH=C:\Miniconda36-x64\Scripts;%PATH%
- if [%BUILD_TYPE%]==[MSVC_64_Debug] conda config --add channels conda-forge --force
- if [%BUILD_TYPE%]==[MSVC_64_Debug] conda update --all -y
- if [%BUILD_TYPE%]==[MSVC_64_Debug] conda create -y --name ppnf python=3.7 pagmo
# NOTE: need to use "call" because otherwise it won't work within an if block.
- if [%BUILD_TYPE%]==[MSVC_64_Debug] call activate ppnf

- if [%BUILD_TYPE%]==[MSVC_64_Python37] call "C:\\Miniconda37-x64\\Scripts\\activate.bat"
- if [%BUILD_TYPE%]==[MSVC_64_Python37] conda config --add channels conda-forge --force
# - if [%BUILD_TYPE%]==[MSVC_64_Python37] conda clean --all -y
# - if [%BUILD_TYPE%]==[MSVC_64_Python37] conda update conda -y
- if [%BUILD_TYPE%]==[MSVC_64_Python37] conda update --all -y
- if [%BUILD_TYPE%]==[MSVC_64_Python37] conda create -y --name ppnf python=3.7 cmake pagmo 
- if [%BUILD_TYPE%]==[MSVC_64_Python37] call activate ppnf

- if [%BUILD_TYPE%]==[MSVC_64_Python36] call "C:\\Miniconda36-x64\\Scripts\\activate.bat"
- if [%BUILD_TYPE%]==[MSVC_64_Python36] conda config --add channels conda-forge --force
# - if [%BUILD_TYPE%]==[MSVC_64_Python36] conda clean --all -y
# - if [%BUILD_TYPE%]==[MSVC_64_Python36] conda update conda -y
- if [%BUILD_TYPE%]==[MSVC_64_Python36] conda update --all -y
- if [%BUILD_TYPE%]==[MSVC_64_Python36] conda create -y --name pagmo python=3.6 cmake pagmo pygmo
- if [%BUILD_TYPE%]==[MSVC_64_Python36] call activate ppnf

# Rename sh.exe as sh.exe in PATH interferes with MinGW.
- if [%BUILD_TYPE%]==[MinGW_64_Debug] rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe"

- if [%BUILD_TYPE%]==[MinGW_64_Python27] rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe"
- if [%BUILD_TYPE%]==[MinGW_64_Python36] rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe"
- if [%BUILD_TYPE%]==[MinGW_64_Python37] rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe"

build_script:
- if [%BUILD_TYPE%]==[MSVC_64_Debug] mkdir build
- if [%BUILD_TYPE%]==[MSVC_64_Debug] cd build
- if [%BUILD_TYPE%]==[MSVC_64_Debug] cmake -G "Visual Studio 14 2015 Win64" -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%/Library -DPPNF_BUILD_CPP=YES -DPPNF_BUILD_PYTHON=NO -DPPNF_BUILD_TESTS=YES ..
- if [%BUILD_TYPE%]==[MSVC_64_Debug] cmake --build . --config Release --target install

- if [%BUILD_TYPE%]==[MSVC_64_Python37] mkdir build_pagmo_plugins_nonfree
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd build_pagmo_plugins_nonfree
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cmake -G "Visual Studio 14 2015 Win64" -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%/Library -DPPNF_BUILD_CPP=YES -DPPNF_BUILD_PYTHON=NO -DPPNF_BUILD_TESTS=YES ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cmake --build . --config Release --target install
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] mkdir build_pygmo_plugins_nonfree
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd build_pygmo_plugins_nonfree
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cmake -G "Visual Studio 14 2015 Win64" -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%/Library -DPPNF_BUILD_CPP=NO -DPPNF_BUILD_PYTHON=YES -DPPNF_BUILD_TESTS=NO ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cmake --build . --config Release --target install

- if [%BUILD_TYPE%]==[MSVC_64_Python36] mkdir build_pagmo
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd build_pagmo
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cmake -G "Visual Studio 14 2015 Win64" -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%/Library -DPAGMO_WITH_EIGEN3=yes -DPAGMO_WITH_NLOPT=yes ..
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cmake --build . --config Release --target install
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python36] mkdir build_pygmo
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd build_pygmo
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cmake -G "Visual Studio 14 2015 Win64" -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%/Library -DPAGMO_BUILD_PYGMO=yes -DPAGMO_BUILD_PAGMO=no ..
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cmake --build . --config Release --target install

- if [%BUILD_TYPE%]==[MinGW_64_Debug] C:\Python36-x64\python.exe tools\install_appveyor_mingw.py

- if [%BUILD_TYPE%]==[MinGW_64_Python27] C:\Python36-x64\python.exe tools\install_appveyor_mingw.py
- if [%BUILD_TYPE%]==[MinGW_64_Python36] C:\Python36-x64\python.exe tools\install_appveyor_mingw.py
- if [%BUILD_TYPE%]==[MinGW_64_Python37] C:\Python36-x64\python.exe tools\install_appveyor_mingw.py

test_script:
- if [%BUILD_TYPE%]==[MSVC_64_Debug] ctest --output-on-failure

- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd tools
- if [%BUILD_TYPE%]==[MSVC_64_Python37] Powershell.exe -File start_ip_cluster.ps1
- if [%BUILD_TYPE%]==[MSVC_64_Python37] timeout 20
- if [%BUILD_TYPE%]==[MSVC_64_Python37] python -c "import pygmo; pygmo.test.run_test_suite(1)"
- if [%BUILD_TYPE%]==[MSVC_64_Python37] python travis_additional_tests.py
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd ap_examples
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd uda_basic
- if [%BUILD_TYPE%]==[MSVC_64_Python37] mkdir build
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd build
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cmake -G "Visual Studio 14 2015 Win64" -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%/Library ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cmake --build . --config Release --target install
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] python test1.py
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd udp_basic
- if [%BUILD_TYPE%]==[MSVC_64_Python37] mkdir build
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd build
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cmake -G "Visual Studio 14 2015 Win64" -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%/Library ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cmake --build . --config Release --target install
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] python test2.py

- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd tools
- if [%BUILD_TYPE%]==[MSVC_64_Python36] Powershell.exe -File start_ip_cluster.ps1
- if [%BUILD_TYPE%]==[MSVC_64_Python36] timeout 20
- if [%BUILD_TYPE%]==[MSVC_64_Python36] python -c "import pygmo; pygmo.test.run_test_suite(1)"
- if [%BUILD_TYPE%]==[MSVC_64_Python36] python travis_additional_tests.py
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd ap_examples
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd uda_basic
- if [%BUILD_TYPE%]==[MSVC_64_Python36] mkdir build
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd build
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cmake -G "Visual Studio 14 2015 Win64" -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%/Library ..
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cmake --build . --config Release --target install
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python36] python test1.py
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd udp_basic
- if [%BUILD_TYPE%]==[MSVC_64_Python36] mkdir build
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd build
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cmake -G "Visual Studio 14 2015 Win64" -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%/Library ..
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cmake --build . --config Release --target install
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python36] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python36] python test2.py

artifacts:
  - path: build\wheel\dist
    name: wheels

notifications:
  - provider: Webhook
    url: https://webhooks.gitter.im/e/1a3742192bd3f7e6d8e2

# Enable this to be able to login to the build worker. You can use the
# `remmina` program in Ubuntu, use the login information that the line below
# prints into the log.
# on_finish:
# - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
